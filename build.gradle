plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'io.github.juuxel.loom-vineflower' version '1.11.0'
    id 'maven-publish'
    id 'org.ajoberstar.grgit' version '4.1.1'
}

version = "${getVersionMetadata()}"
group = project.maven_group

base {
    archivesName = "${project.archives_base_name}-${project.minecraft_version}"
}

def getVersionMetadata() {
    // CI builds version numbers
    def build_id = System.getenv("RELEASE_NUMBER")
    if (build_id != null) {
        return build_id + ".0.0"
    }

    // Development builds
    if (grgit == null) {
        return "dev"
    }

    // Named development builds
    def id = grgit.head().abbreviatedId
    if (!grgit.status().clean) {
        id += "-dirty"
    }

    return "rev.${id}"
}

repositories {
    maven { url 'https://jitpack.io' }
}

loom {
    accessWidenerPath = file("src/main/resources/worldpreview.accesswidener")
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "com.github.RedLime:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation files("libs/state-output-common-1.0.0+1.3-1.20.jar")
    include(modImplementation("net.fabricmc.fabric-api:fabric-key-binding-api-v1:1.0.36+fb8d95da77"))
}

processResources {
    inputs.property "mod_id", project.archives_base_name
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "mod_id": project.archives_base_name, "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 8
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
